chrome.runtime.onInstalled.addListener(()=>{console.log("Extension installed")});chrome.runtime.onStartup.addListener(()=>{console.log("Chrome started")});chrome.alarms.create("keepAlive",{periodInMinutes:5});chrome.alarms.onAlarm.addListener(e=>{console.log("Alarm:",e.name)});chrome.runtime.onMessage.addListener((e,s,t)=>{if(e.type==="triggerOra"){if(console.log("Received message:",e),!e.userId){console.log("No user ID detected. Prompting login."),chrome.tabs.query({active:!0,currentWindow:!0},r=>{chrome.scripting.executeScript({target:{tabId:r[0].id},func:()=>{alert("You must sign in first. Please click the extension icon and log in.")}})}),chrome.action.openPopup(),t({success:!1,message:"No user signed in. Popup opened."});return}const o="http://localhost:5000/start-bot",n={meetUrl:e.meetUrl,platform:e.platform,userId:e.userId};return fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then(async r=>{if(!r.ok)throw new Error(`Server responded with ${r.status}`);const a=await r.json();console.log("Launch response:",a),t({success:!0,message:"Ora launched successfully!"})}).catch(r=>{console.error("Error launching Ora:",r),t({success:!1,message:"Failed to launch Ora."})}),!0}});
